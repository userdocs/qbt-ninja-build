name: ci - mcm ninja build

on:
  workflow_dispatch:
    inputs:
      skip_rerun:
        description: "Skip rerun?"
        required: true
        default: false
        type: boolean
      retries:
        description: "Number of rerun retries"
        required: true
        default: "2"
        type: choice
        options: ["1", "2", "3", "4", "5", "6", "7", "8", "9"]

  schedule:
    - cron: "0 */23 * * *"

concurrency:
  group: mcm-ninja-build
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-24.04-arm # needs to be ubuntu-24.04 for qemu-user-static loongarch64 support
    name: ${{ matrix.arch_type }}
    permissions:
      contents: write
      id-token: write
      attestations: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch_type: "aarch64-linux-musl"
            binary_name: aarch64
          - arch_type: "arm-linux-musleabi"
            binary_name: armv5
          - arch_type: "arm-linux-musleabihf"
            binary_name: armhf
          - arch_type: "armv6-linux-musleabihf"
            binary_name: armv6
          - arch_type: "armv7l-linux-musleabihf"
            binary_name: armv7
          - arch_type: "i686-linux-musl"
            binary_name: x86
          - arch_type: "x86_64-linux-musl"
            binary_name: x86_64
          - arch_type: "mips-linux-musl"
            binary_name: mips
          - arch_type: "mips64-linux-musl"
            binary_name: mips64
          - arch_type: "mips64el-linux-musl"
            binary_name: mips64el
          - arch_type: "mipsel-linux-musl"
            binary_name: mipsel
          - arch_type: "powerpc-linux-musl"
            binary_name: powerpc
          - arch_type: "powerpc64le-linux-musl"
            binary_name: powerpc64le
          - arch_type: "s390x-linux-musl"
            binary_name: s390x
          - arch_type: "riscv64-linux-musl"
            binary_name: riscv64
          - arch_type: "loongarch64-linux-musl"
            binary_name: loongarch64
    env:
      container_name: crossbuild
      CPPFLAGS: "-I/home/gh/local/include -I/usr/include/fortify -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=3"
      LDFLAGS: "-static --static -L/home/gh/local/lib -Wl,-O1,--as-needed,--sort-common,-z,nodlopen,-z,noexecstack,-z,now,-z,relro,-z,--no-copy-dt-needed-entries,--build-id"

    steps:
      - name: Host - checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Host - Bootstrap qemu
        uses: userdocs/actions/qemu@e74d179578ddcf1cd07cd9eefd0915f33a3bd600 # v1.0.1

      - uses: userdocs/actions/qbt_docker@e74d179578ddcf1cd07cd9eefd0915f33a3bd600 # v1.0.1
        with:
            # if the env.custom file exists, it will be used to pass environment
            distinct_id: ""
            use_host_env: "false"
            container_name: ${{ env.container_name }}
            os_id: ghcr.io/userdocs/qbt-musl-cross-make
            os_version_id: ${{ matrix.arch_type }}
            custom_docker_commands: "-e CPPFLAGS='${{ env.CPPFLAGS }}' -e LDFLAGS='${{ env.LDFLAGS }}'"
            additional_alpine_apps: "bash curl git"
            additional_debian_apps: "bash curl git"

      - name: Host - Git clone ninja
        run: git clone --no-tags --single-branch --branch master --depth=1 "https://github.com/ninja-build/ninja.git" "ninja"

      - name: Create tag env
        working-directory: ninja
        run: printf '%s\n' "ninja_github_tag=$(cat src/version.cc | sed -rn 's|const char\* kNinjaVersion = "(.*)";|\1|p' | sed 's/\.git//g')" >> $GITHUB_ENV

      - name: Configure ninja
        run: >
          docker exec -u gh:gh -w /home/gh/ninja ${container_name} cmake -B build
          -D CMAKE_BUILD_TYPE="Release"
          -D CMAKE_CXX_STANDARD="20"
          -D CMAKE_INSTALL_PREFIX="/home/gh"
          -D BUILD_TESTING=off

      - name: Cmake Build ninja
        run: docker exec -u gh:gh -w /home/gh/ninja ${container_name} cmake --build build --parallel --config Release

      - name: Host - Rename ninja to ninja-${{ matrix.binary_name }}
        run: mv -f ${{ github.workspace }}/ninja/build/ninja ninja-${{ matrix.binary_name }}

      - name: Host - ninja-${{ matrix.binary_name }} --version
        run: ./ninja-${{ matrix.binary_name }} --version >> $GITHUB_STEP_SUMMARY

      - name: Host - crossbuild binary info via file
        run: file ./ninja-${{ matrix.binary_name }} >> $GITHUB_STEP_SUMMARY

      - name: Host - signed build provenance attestations
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be # v2.4.0
        with:
          subject-path: ninja-${{ matrix.binary_name }}

      - name: Upload artifact - ${{ matrix.binary_name }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ninja-${{ matrix.binary_name }}
          path: ninja-${{ matrix.binary_name }}

      - name: "Create release"
        uses: ncipollo/release-action@bcfe5470707e8832e12347755757cec0eb3c22af # v1.18.0
        with:
          prerelease: false
          artifacts: ninja-${{ matrix.binary_name }}
          replacesArtifacts: true
          tag: v${{ env.ninja_github_tag }}
          name: ninja ${{ env.ninja_github_tag }}
          allowUpdates: true
          token: ${{ github.token }}

  ci-auto-rerun-failed-jobs:
    if: failure() && (github.event.inputs.skip_rerun || 'false') == 'false'
    needs: [build]
    concurrency:
      group: ci-auto-rerun-failed-jobs
      cancel-in-progress: true
    permissions:
      actions: write
    runs-on: ubuntu-24.04-arm
    env:
      GH_TOKEN: "${{ secrets.AUTO_RERUN || github.token }}"
      github_repo: "" # To use ci-auto-rerun-failed-jobs.yml hosted in a remote repository else default to the current repository. Requires PAT token AUTO_RERUN
      retries: ${{ github.event.inputs.retries || '1' }}
      distinct_id: ${{ github.event.inputs.distinct_id }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: ci-auto-rerun-failed-jobs via ${{ env.github_repo || github.repository }}
        run: >
          gh workflow run ci-auto-rerun-failed-jobs-action.yml
          --repo "${github_repo:-$GITHUB_REPOSITORY}"
          -f github_repo=${GITHUB_REPOSITORY}
          -f run_id=${GITHUB_RUN_ID}
          -f attempts=${GITHUB_RUN_ATTEMPT}
          -f retries=${retries}
          -f distinct_id=${distinct_id}
